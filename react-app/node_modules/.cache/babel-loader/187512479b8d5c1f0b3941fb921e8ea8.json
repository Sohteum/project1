{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\CompForm1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompForm1 = () => {\n  _s();\n\n  const [_chk, _setChk] = useState();\n  const [_input, _setInput] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"\\uC790\\uBC14\\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uBB38\\uBC95 \\uD65C\\uC6A9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          defaultChecked: true,\n          value: \"1\",\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6241\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: \"2\",\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6242\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCD08\\uAE30\\uD654\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: _input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompForm1, \"hx1YsUpxH4kctfCeqFataXU+74Y=\");\n\n_c = CompForm1;\nexport default CompForm1;\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CompForm1\");","map":{"version":3,"names":["React","useState","CompForm1","_chk","_setChk","_input","_setInput"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/CompForm1.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CompForm1 = () => {\r\n  const [_chk, _setChk] = useState()\r\n  const [_input, _setInput] = useState('')\r\n  return (\r\n    <form>\r\n      <fieldset>\r\n        <legend>자바스크립트 문법 활용하기</legend>\r\n        <p>\r\n          <input defaultChecked={true} value=\"1\" type=\"radio\" name='radio1' />라디오1\r\n          <input value=\"2\" type=\"radio\" name='radio1' />라디오2\r\n        </p>\r\n        <p>\r\n          <input type=\"text\" />\r\n        </p>\r\n        <p>\r\n          <button>초기화하기</button>\r\n        </p>\r\n        <p>\r\n          {_input}\r\n        </p>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompForm1;\r\n\r\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,EAAhC;EACA,MAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAO,cAAc,EAAE,IAAvB;UAA6B,KAAK,EAAC,GAAnC;UAAuC,IAAI,EAAC,OAA5C;UAAoD,IAAI,EAAC;QAAzD;UAAA;UAAA;UAAA;QAAA,QADF,sCAEE;UAAO,KAAK,EAAC,GAAb;UAAiB,IAAI,EAAC,OAAtB;UAA8B,IAAI,EAAC;QAAnC;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA,uBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,eASE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF,eAYE;QAAA,UACGI;MADH;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAvBD;;GAAMH,S;;KAAAA,S;AAyBN,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}