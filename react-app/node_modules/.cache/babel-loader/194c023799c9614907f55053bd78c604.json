{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport CompBtn from \"./CompBtn\";\nimport CompDiv from \"./CompDiv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [_listArr, _setListArr] = useState([]); //div 반복출력할려고 만든거야 listArr//배열이 늘어날때 div가 늘어나게하고파\n\n  const fnAddListHandler = function () {\n    const listArr = [..._listArr];\n    listArr.push('');\n\n    _setListArr(_listArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uBC84\\uD2BC\\uC744 \\uD074\\uB9AD\\uD560\\uB54C\\uB9C8\\uB2E4 div\\uAC00 \\uCD94\\uAC00\\uB429\\uB2C8\\uB2E4. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 32\n      }, this), \"div\\uC758 \\uD0A4\\uAC12\\uC73C\\uB85C\\uB294 timeStamp\\uB97C \\uC0AC\\uC6A9\\uD558\\uC138\\uC694 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 37\n      }, this), \"\\uBE0C\\uB77C\\uC6B0\\uC800\\uB97C \\uC885\\uB8CC\\uD6C4 \\uB2E4\\uC2DC \\uC2E4\\uD589\\uD560 \\uACBD\\uC6B0 div\\uC758 \\uC22B\\uC790\\uB294 \\uC774\\uC804\\uACFC \\uB3D9\\uC77C\\uD558\\uAC8C \\uCD9C\\uB825\\uB418\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), _listArr.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uBAA9\\uB85D\\uC774 \\uC5C6\\uC5B4\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : _listArr.map(v => /*#__PURE__*/_jsxDEV(CompDiv, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 27\n    }, this))\n    /*  [<CompDiv />,<CompDiv />] */\n    , \" \", /*#__PURE__*/_jsxDEV(CompBtn, {\n      onClick: fnAddListHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ObyDl3EOXBn01nVydtEp9B5dKuw=\");\n\n_c = App;\nexport default App; //버튼을 눌렀을때 추가하는거 먼저 배열이 있어야함...map.... 처음에는 하나 배열을 넣음. 그다음 2번째 인덱스 타임스탬프. 클릭할때마다 배열의 값이 추가가되는데 그걸 타임스템프를 밀어넣어서 추가할것. 그걸 키값으로 사용하고 해당 컴포넌트에서 추가한 날짜...\n//타입스템프로 키값..\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CompBtn","CompDiv","App","_listArr","_setListArr","fnAddListHandler","listArr","push","length","map","v"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CompBtn from \"./CompBtn\";\r\nimport CompDiv from \"./CompDiv\";\r\n\r\n\r\nfunction App() {\r\n  const [_listArr, _setListArr] = useState([]) //div 반복출력할려고 만든거야 listArr//배열이 늘어날때 div가 늘어나게하고파\r\n\r\n\r\n  const fnAddListHandler = function () {\r\n    const listArr = [..._listArr]\r\n    listArr.push('')\r\n    _setListArr(_listArr)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        버튼을 클릭할때마다 div가 추가됩니다. <br />\r\n        div의 키값으로는 timeStamp를 사용하세요 <br />\r\n        브라우저를 종료후 다시 실행할 경우 div의 숫자는 이전과 동일하게 출력되어야 합니다.\r\n      </p>\r\n      <hr />\r\n      {_listArr.length === 0 ?\r\n        <p>목록이 없어요</p>\r\n        :\r\n        _listArr.map(v => <CompDiv />)\r\n        /*  [<CompDiv />,<CompDiv />] */\r\n      } {/* 배열의 길이만큼 새로운 배열(배열이 필요하니까. 근데 리턴문안에서는 1개밖에 리턴못하자나 그니까 배열로 리턴해야지)을 만들겠다 */}\r\n      <CompBtn onClick={fnAddListHandler} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//버튼을 눌렀을때 추가하는거 먼저 배열이 있어야함...map.... 처음에는 하나 배열을 넣음. 그다음 2번째 인덱스 타임스탬프. 클릭할때마다 배열의 값이 추가가되는데 그걸 타임스템프를 밀어넣어서 추가할것. 그걸 키값으로 사용하고 해당 컴포넌트에서 추가한 날짜...\r\n//타입스템프로 키값..\r\n\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CADa,CACgC;;EAG7C,MAAMM,gBAAgB,GAAG,YAAY;IACnC,MAAMC,OAAO,GAAG,CAAC,GAAGH,QAAJ,CAAhB;IACAG,OAAO,CAACC,IAAR,CAAa,EAAb;;IACAH,WAAW,CAACD,QAAD,CAAX;EACD,CAJD;;EAMA,oBACE;IAAA,wBACE;MAAA,8HACyB;QAAA;QAAA;QAAA;MAAA,QADzB,2GAE8B;QAAA;QAAA;QAAA;MAAA,QAF9B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA;MAAA;MAAA;IAAA,QANF,EAOGA,QAAQ,CAACK,MAAT,KAAoB,CAApB,gBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,GAGCL,QAAQ,CAACM,GAAT,CAAaC,CAAC,iBAAI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAlB;IACA;IAXJ,oBAaE,QAAC,OAAD;MAAS,OAAO,EAAEL;IAAlB;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA,gBADF;AAiBD;;GA3BQH,G;;KAAAA,G;AA6BT,eAAeA,GAAf,C,CAEA;AACA"},"metadata":{},"sourceType":"module"}