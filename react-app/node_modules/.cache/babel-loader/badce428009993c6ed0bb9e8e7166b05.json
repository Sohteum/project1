{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRA_KimDY\\\\Desktop\\\\\\uC6A9\\uC19F\\uC74C\\\\project1\\\\react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport CompModal from \"./components/CompModal\";\nimport Compsum from \"./components/Compsum\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cnt, setCnt] = useState();\n  const [arrComp, setArrComp] = useState(['1', '2', '3']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB354\\uD558\\uAE30\\uBB38\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), arrComp.map(v => {\n      return /*#__PURE__*/_jsxDEV(Compsum, {}, v, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CompModal, {\n      cnt: cnt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"A5LLR+NZCx0LJpSX5yZ0n8qsOvo=\");\n_c = App;\nexport default App;\n\n//맵은 동일한 길이, 필터는 다른길이\n\n//jsx에서 보간법, ``안에서의 ${}보간법 구분하기\n\n//반복문을 넣어서 컴포넌트를 출력하는 경우에는 무조건 키를 넣어야함.키라는 프롭스가 필요. 키를 넣을 때는 모두 다 다른 유니크한 키값을 넣어야함. \n//키의 출발 자체가 수정관리시에 그 키 하나만 수정하려고 하는거라서.\n//오타가 있으면 오타만 찾아서지우면 되지 다 지울필요없으니까\n\n//번호를 부여하는 것. 키가 바뀌면 새로 그려준다. 키는 이름이라고 보면됨. 키가 바뀌면 새로 그린다. 그래서 컴포넌트마다 다른 키값을 주어야함. \n//유니크한 키값을 줘야한다(콘솔창에서 오류뜰때 그렇게 뜸)\n//v는 같은 값이 나올 수 있음\n//i는 반복되는 횟수. 0번째, 1번째, 2번째....\n//key에 i를 주면 전부 다른 키가 들어갈수 있음??근데 이렇게 쓰면 안됨\n//왜냐면 key가 변하면 해당 컴포넌트만 변해야함. 근데 내가 중간에서 특정 컴포넌트를 지울일이 생긴다고 가정했을때 배열의 개수가 줄어들면서 i값이 다바뀜 그래서 i를 사용하면 안됨. 배열이 삭제되거나 추가하면 i값도 달라지니까\n//반면에 v는 변하지않음.배열안에잇는 값. 그 값은 변하지 않는다. 첫번째는 무조건 0 \n//키값=유니크한 이름.  \n\n//여기에 문제가 있음 목적:0이 변하면 0만그려야하는데 왜인지 0을 지울일이 생긴다고 가정해.그럼 i값이 하나씩 당겨지면서 전부다 키값이 하나씩오라ㅏ=가                                                                                                         \n\n//배열이 3개면 i는 3. 반복되는 횟수\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CompModal","Compsum","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cnt","setCnt","arrComp","setArrComp","children","fileName","_jsxFileName","lineNumber","columnNumber","map","v","_c","$RefreshReg$"],"sources":["C:/Users/KRA_KimDY/Desktop/용솟음/project1/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport CompModal from \"./components/CompModal\";\r\nimport Compsum from \"./components/Compsum\";\r\n\r\n\r\nfunction App() {\r\n\r\n  const [cnt, setCnt] = useState()\r\n  const [arrComp, setArrComp] = useState(['1', '2', '3'])\r\n\r\n  return (\r\n    <>\r\n      <h1>더하기문제</h1>\r\n      <hr />\r\n      {arrComp.map((v) => {\r\n        return <Compsum key={v }/>\r\n      })}\r\n\r\n\r\n      <CompModal cnt={cnt} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//맵은 동일한 길이, 필터는 다른길이\r\n\r\n//jsx에서 보간법, ``안에서의 ${}보간법 구분하기\r\n\r\n//반복문을 넣어서 컴포넌트를 출력하는 경우에는 무조건 키를 넣어야함.키라는 프롭스가 필요. 키를 넣을 때는 모두 다 다른 유니크한 키값을 넣어야함. \r\n//키의 출발 자체가 수정관리시에 그 키 하나만 수정하려고 하는거라서.\r\n//오타가 있으면 오타만 찾아서지우면 되지 다 지울필요없으니까\r\n\r\n//번호를 부여하는 것. 키가 바뀌면 새로 그려준다. 키는 이름이라고 보면됨. 키가 바뀌면 새로 그린다. 그래서 컴포넌트마다 다른 키값을 주어야함. \r\n//유니크한 키값을 줘야한다(콘솔창에서 오류뜰때 그렇게 뜸)\r\n//v는 같은 값이 나올 수 있음\r\n//i는 반복되는 횟수. 0번째, 1번째, 2번째....\r\n//key에 i를 주면 전부 다른 키가 들어갈수 있음??근데 이렇게 쓰면 안됨\r\n//왜냐면 key가 변하면 해당 컴포넌트만 변해야함. 근데 내가 중간에서 특정 컴포넌트를 지울일이 생긴다고 가정했을때 배열의 개수가 줄어들면서 i값이 다바뀜 그래서 i를 사용하면 안됨. 배열이 삭제되거나 추가하면 i값도 달라지니까\r\n//반면에 v는 변하지않음.배열안에잇는 값. 그 값은 변하지 않는다. 첫번째는 무조건 0 \r\n//키값=유니크한 이름.  \r\n\r\n\r\n//여기에 문제가 있음 목적:0이 변하면 0만그려야하는데 왜인지 0을 지울일이 생긴다고 가정해.그럼 i값이 하나씩 당겨지면서 전부다 키값이 하나씩오라ㅏ=가                                                                                                         \r\n\r\n\r\n//배열이 3개면 i는 3. 반복되는 횟수"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAChC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EAEvD,oBACEI,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdb,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLN,OAAO,CAACO,GAAG,CAAEC,CAAC,IAAK;MAClB,oBAAOf,OAAA,CAACF,OAAO,MAAMiB,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC5B,CAAC,CAAC,eAGFb,OAAA,CAACH,SAAS;MAACQ,GAAG,EAAEA;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACvB,CAAC;AAEP;AAACT,EAAA,CAjBQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAmBZ,eAAeA,GAAG;;AAGlB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}