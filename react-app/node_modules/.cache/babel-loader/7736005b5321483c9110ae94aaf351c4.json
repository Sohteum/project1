{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KRA_KimDY\\\\Desktop\\\\\\uC6A9\\uC19F\\uC74C\\\\project1\\\\react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; //컴포넌트끼리 공유해야하는 함수는 밖에서 만들면 안됨. 무조건 안에서 만들어야함. 밖에서 만들면 좋은점 : \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet fnGetRandom = () => Math.floor(Math.random() * 10);\n\nfunction App() {\n  _s();\n\n  const [num1, setNum1] = useState(fnGetRandom);\n  const [num2, setNum2] = useState(fnGetRandom);\n  const [result, setResult] = useState();\n  const [point, setPoint] = useState(); //react만의 만들어지지 않은 객체를 찾는방법?\n\n  const refInput1 = useRef();\n  const refInput2 = useRef(0); //arrow function은 스코프를 꼭 지정해줘야함\n\n  function fnSubmit(e) {\n    //arrow펑션은 내장함수쓸때 많이 쓰고 내가 만드는 함수는 이런식으로 많이 사용함\n    e.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uAD6C\\uAD6C\\uB2E8\\uC5F0\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: fnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: refInput1,\n        defaultValue: num1,\n        type: \"number\",\n        min: \"0\",\n        max: \"9\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), \"*\", /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: refInput2,\n        defaultValue: num2,\n        type: \"number\",\n        min: \"0\",\n        max: \"9\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \"=\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        max: \"99\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          display: \"none\"\n        },\n        children: \"\\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"output\",\n      children: [\"\\uACB0\\uACFC : \", result, \", \\uC810\\uC218 : \", point, \"\\uC810\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/w3vXkNNUx9bQEwB8oJqG+aanXE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","fnGetRandom","Math","floor","random","App","num1","setNum1","num2","setNum2","result","setResult","point","setPoint","refInput1","useRef","refInput2","fnSubmit","e","preventDefault","display"],"sources":["C:/Users/KRA_KimDY/Desktop/용솟음/project1/react-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//컴포넌트끼리 공유해야하는 함수는 밖에서 만들면 안됨. 무조건 안에서 만들어야함. 밖에서 만들면 좋은점 : \r\nlet fnGetRandom =()=> Math.floor(Math.random()*10)\r\n\r\nfunction App() {\r\n\r\n  const [num1, setNum1] = useState(fnGetRandom);\r\n  const [num2, setNum2] = useState(fnGetRandom);\r\n  const [result, setResult] = useState( );\r\n  const [point, setPoint] = useState( );\r\n\r\n  //react만의 만들어지지 않은 객체를 찾는방법?\r\n  const refInput1 = useRef()\r\n  const refInput2 = useRef(0)\r\n\r\n//arrow function은 스코프를 꼭 지정해줘야함\r\n\r\n  function fnSubmit(e) {//arrow펑션은 내장함수쓸때 많이 쓰고 내가 만드는 함수는 이런식으로 많이 사용함\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>구구단연습</h3>\r\n      <form onSubmit={fnSubmit}>\r\n        <input ref={refInput1} defaultValue={num1} type=\"number\" min=\"0\" max=\"9\" readOnly />\r\n        *\r\n        <input ref={refInput2} defaultValue={num2} type=\"number\" min=\"0\" max=\"9\" readOnly />\r\n        =\r\n        <input type=\"number\" min=\"0\" max=\"99\" />\r\n        <button style={{display:\"none\"}}>결과</button>\r\n      </form>\r\n      <p className=\"output\">결과 : {result}, 점수 : {point}점</p>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;;AACA,IAAIC,WAAW,GAAE,MAAKC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAtB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACC,WAAD,CAAhC;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACC,WAAD,CAAhC;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBX,QAAQ,EAApC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC,CALa,CAOb;;EACA,MAAMc,SAAS,GAAGC,MAAM,EAAxB;EACA,MAAMC,SAAS,GAAGD,MAAM,CAAC,CAAD,CAAxB,CATa,CAWf;;EAEE,SAASE,QAAT,CAAkBC,CAAlB,EAAqB;IAAC;IACpBA,CAAC,CAACC,cAAF;EACD;;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEF,QAAhB;MAAA,wBACE;QAAO,GAAG,EAAEH,SAAZ;QAAuB,YAAY,EAAER,IAArC;QAA2C,IAAI,EAAC,QAAhD;QAAyD,GAAG,EAAC,GAA7D;QAAiE,GAAG,EAAC,GAArE;QAAyE,QAAQ;MAAjF;QAAA;QAAA;QAAA;MAAA,QADF,oBAGE;QAAO,GAAG,EAAEU,SAAZ;QAAuB,YAAY,EAAER,IAArC;QAA2C,IAAI,EAAC,QAAhD;QAAyD,GAAG,EAAC,GAA7D;QAAiE,GAAG,EAAC,GAArE;QAAyE,QAAQ;MAAjF;QAAA;QAAA;QAAA;MAAA,QAHF,oBAKE;QAAO,IAAI,EAAC,QAAZ;QAAqB,GAAG,EAAC,GAAzB;QAA6B,GAAG,EAAC;MAAjC;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAQ,KAAK,EAAE;UAACY,OAAO,EAAC;QAAT,CAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAG,SAAS,EAAC,QAAb;MAAA,8BAA4BV,MAA5B,uBAA2CE,KAA3C;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA,gBADF;AAcD;;GA/BQP,G;;KAAAA,G;AAkCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}