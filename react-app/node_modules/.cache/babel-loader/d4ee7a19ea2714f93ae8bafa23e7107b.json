{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\CompForm3.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompForm3 = () => {\n  const fnInputHandler = function () {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"default \\uC18D\\uC131 \\uD65C\\uC6A9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6241\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6242\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onInput: fnInputHandler,\n          value: 'dd',\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCD08\\uAE30\\uD654\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CompForm3;\nexport default CompForm3;\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택(입력아니고 선택)할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CompForm3\");","map":{"version":3,"names":["React","useEffect","useState","CompForm3","fnInputHandler"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/CompForm3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CompForm3 = () => {\r\n \r\n const fnInputHandler = function(){\r\n\r\n }\r\n\r\n  return (  \r\n    <form  >\r\n      <fieldset>\r\n        <legend>default 속성 활용하기</legend>\r\n        <p>\r\n          <input  type=\"radio\" name='radio1' />라디오1\r\n          <input   type=\"radio\" name='radio1' />라디오2\r\n        </p>\r\n        <p>\r\n          <input onInput={fnInputHandler} value={'dd'}  type=\"text\" />\r\n        </p>\r\n        <p>\r\n          <button>초기화하기</button>\r\n        </p>\r\n        <p>\r\n         \r\n        </p>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompForm3;\r\n\r\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택(입력아니고 선택)할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAEvB,MAAMC,cAAc,GAAG,YAAU,CAEhC,CAFD;;EAIC,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAQ,IAAI,EAAC,OAAb;UAAqB,IAAI,EAAC;QAA1B;UAAA;UAAA;UAAA;QAAA,QADF,sCAEE;UAAS,IAAI,EAAC,OAAd;UAAsB,IAAI,EAAC;QAA3B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA,uBACE;UAAO,OAAO,EAAEA,cAAhB;UAAgC,KAAK,EAAE,IAAvC;UAA8C,IAAI,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF,eASE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF,eAYE;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA1BD;;KAAMD,S;AA4BN,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}