{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\CompForm3.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fnSetObj } from './fn'; //사이트에 접속할때 처음. 그냥 무조건 나옴. 화면이 안나와도 나옴\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompForm3 = () => {\n  _s();\n\n  const [_input, _setInput] = useState(''); //조건부로 출력 못하게 햇다가 다시 출력할때 에를들어 모달창을 닫거나, 화면이 나올때\n\n  const [_chkObj, _setChkObj] = useState(fnSetObj()); //양이 많아지면 직접 입력할 수 없잖아 그러니까 함수를 받아준다//디폴트로는 1을 받아주는거지\n  //이 아래는 스테이트가 변경될때 바뀜\n\n  const fnInputHandler = function (e) {\n    _setInput(e.target.value);\n  };\n\n  const fnSubmitHandler = function (e) {\n    e.preventDefault();\n  };\n\n  const fnChangeHandler = function () {\n    _setChkObj(fnSetObj(2));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: fnSubmitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"default \\uC18D\\uC131 \\uD65C\\uC6A9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: fnChangeHandler,\n          checked: _chkObj[1],\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6241 \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: fnChangeHandler,\n          checked: _chkObj[2],\n          type: \"radio\",\n          name: \"radio1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), \"\\uB77C\\uB514\\uC6242\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onInput: fnInputHandler,\n          value: _input,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uCD08\\uAE30\\uD654\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: _input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompForm3, \"KctzfnnbwTXOfDgWClSuEpxzzag=\");\n\n_c = CompForm3;\nexport default CompForm3;\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택(입력아니고 선택)할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CompForm3\");","map":{"version":3,"names":["React","useEffect","useState","fnSetObj","CompForm3","_input","_setInput","_chkObj","_setChkObj","fnInputHandler","e","target","value","fnSubmitHandler","preventDefault","fnChangeHandler"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/CompForm3.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fnSetObj } from './fn';\r\n\r\n //사이트에 접속할때 처음. 그냥 무조건 나옴. 화면이 안나와도 나옴\r\n\r\nconst CompForm3 = () => {\r\n\r\n  const [_input, _setInput] = useState('') //조건부로 출력 못하게 햇다가 다시 출력할때 에를들어 모달창을 닫거나, 화면이 나올때\r\n  const [_chkObj, _setChkObj] = useState(fnSetObj())//양이 많아지면 직접 입력할 수 없잖아 그러니까 함수를 받아준다//디폴트로는 1을 받아주는거지\r\n\r\n//이 아래는 스테이트가 변경될때 바뀜\r\n  const fnInputHandler = function (e) {\r\n    _setInput(e.target.value)\r\n  }\r\n\r\n  const fnSubmitHandler = function (e) {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const fnChangeHandler = function () {\r\n    _setChkObj(fnSetObj(2))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={fnSubmitHandler} >\r\n      <fieldset>\r\n        <legend>default 속성 활용하기</legend>\r\n        <p>\r\n          <input onChange={fnChangeHandler} checked={_chkObj[1]} type=\"radio\" name='radio1' />라디오1 {/* 여기 이렇게 불리언값넣어두면 평생안변해 스테이트 만들어 */}\r\n          <input onChange={fnChangeHandler} checked={_chkObj[2]} type=\"radio\" name='radio1' />라디오2{/* 여기서 왜 []이거써? _chkObj.1 이런것 못써 */}\r\n        </p>\r\n        <p>\r\n          <input onInput={fnInputHandler} value={_input} type=\"text\" /> {/* 밸류는 사용자가 못바꾸니까. 사용자가 입력할때마다 그 값을 갱신해주는 이벤트를 같이 바인딩하자. 타겟값을 이용해서 밸류를 바꿔주자 그럼 벨류를 사용할 수 있잖아 */}\r\n        </p>\r\n        <p>\r\n          <button>초기화하기</button>\r\n        </p>\r\n        <p>\r\n          {_input}\r\n        </p>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompForm3;\r\n\r\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택(입력아니고 선택)할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,MAAzB,C,CAEC;;;;AAED,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CAFsB,CAEmB;;EACzC,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACC,QAAQ,EAAT,CAAtC,CAHsB,CAG4B;EAEpD;;EACE,MAAMM,cAAc,GAAG,UAAUC,CAAV,EAAa;IAClCJ,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAFD;;EAIA,MAAMC,eAAe,GAAG,UAAUH,CAAV,EAAa;IACnCA,CAAC,CAACI,cAAF;EACD,CAFD;;EAIA,MAAMC,eAAe,GAAG,YAAY;IAClCP,UAAU,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAV;EACD,CAFD;;EAIA,oBACE;IAAM,QAAQ,EAAEU,eAAhB;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UAAO,QAAQ,EAAEE,eAAjB;UAAkC,OAAO,EAAER,OAAO,CAAC,CAAD,CAAlD;UAAuD,IAAI,EAAC,OAA5D;UAAoE,IAAI,EAAC;QAAzE;UAAA;UAAA;UAAA;QAAA,QADF,uCAEE;UAAO,QAAQ,EAAEQ,eAAjB;UAAkC,OAAO,EAAER,OAAO,CAAC,CAAD,CAAlD;UAAuD,IAAI,EAAC,OAA5D;UAAoE,IAAI,EAAC;QAAzE;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAME;QAAA,wBACE;UAAO,OAAO,EAAEE,cAAhB;UAAgC,KAAK,EAAEJ,MAAvC;UAA+C,IAAI,EAAC;QAApD;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eASE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QATF,eAYE;QAAA,UACGA;MADH;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAtCD;;GAAMD,S;;KAAAA,S;AAwCN,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}