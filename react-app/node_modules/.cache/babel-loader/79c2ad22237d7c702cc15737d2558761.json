{"ast":null,"code":"var _jsxFileName = \"D:\\\\YongSohtEum\\\\pwa_class\\\\05react\\\\react-app\\\\src\\\\CompForm2.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompForm2 = () => {\n  return (\n    /*#__PURE__*/\n    //스테이트로 관리할때는 클래스네임필요없어<>스크립트\n    _jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"\\uC790\\uBC14\\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uBB38\\uBC95 \\uD65C\\uC6A9\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: \"1\",\n            type: \"radio\",\n            name: \"radio1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 11\n          }, this), \"\\uB77C\\uB514\\uC6241\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: \"2\",\n            type: \"radio\",\n            name: \"radio1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 11\n          }, this), \"\\uB77C\\uB514\\uC6242\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onInput: fnInputHandler,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fnResetHandler,\n            children: \"\\uCD08\\uAE30\\uD654\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: _input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = CompForm2;\nexport default CompForm2;\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CompForm2\");","map":{"version":3,"names":["React","useEffect","useState","CompForm2","fnInputHandler","fnResetHandler","_input"],"sources":["D:/YongSohtEum/pwa_class/05react/react-app/src/CompForm2.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst CompForm2 = () => {\r\n\r\n  return ( //스테이트로 관리할때는 클래스네임필요없어<>스크립트\r\n    <form>\r\n      <fieldset>\r\n        <legend>자바스크립트 문법 활용하기</legend>\r\n        <p>\r\n          <input value=\"1\" type=\"radio\" name='radio1' />라디오1\r\n          <input value=\"2\" type=\"radio\" name='radio1' />라디오2\r\n        </p>\r\n        <p>\r\n          <input onInput={fnInputHandler} type=\"text\" />\r\n        </p>\r\n        <p>\r\n          <button onClick={fnResetHandler}>초기화하기</button>\r\n        </p>\r\n        <p>\r\n          {_input}\r\n        </p>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CompForm2;\r\n\r\n/* \r\n폼요소의 value속성은 (사용자가) 값을 선택할 수 있는 양식에만 적용 가능\r\n폼요소의 value속성을 값을 변경할 수 있는 양식에 적용하면 uncontrolled 상태가 됨 \r\n->따라서 defaultValue를 사용함\r\n\r\n폼요소의 checked 속성을 적용하면 uncontrolled 상태가 됨 \r\n\r\n uncontrolled 상태 = 사용자가 값을 못바꾸는 상태. 락이 걸린것처럼. \r\n\r\n그래서 defaultChecked를 사용한다(선택태그)\r\n\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지할 수 없음\r\ndefaultChecked, defaultValue의 경우 상태(state)변화를 감지하려면  key값을 변경해야함.\r\n\r\n그래서 오늘 하려는게 가급적 그냥 value와 checked를 사용해보자라는것?해결할 부분?\r\n\r\n*/"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAEtB;IAAA;IAAS;IACP;MAAA,uBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,wBACE;YAAO,KAAK,EAAC,GAAb;YAAiB,IAAI,EAAC,OAAtB;YAA8B,IAAI,EAAC;UAAnC;YAAA;YAAA;YAAA;UAAA,QADF,sCAEE;YAAO,KAAK,EAAC,GAAb;YAAiB,IAAI,EAAC,OAAtB;YAA8B,IAAI,EAAC;UAAnC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAME;UAAA,uBACE;YAAO,OAAO,EAAEC,cAAhB;YAAgC,IAAI,EAAC;UAArC;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QANF,eASE;UAAA,uBACE;YAAQ,OAAO,EAAEC,cAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QATF,eAYE;UAAA,UACGC;QADH;UAAA;UAAA;UAAA;QAAA,QAZF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;AAoBD,CAtBD;;KAAMH,S;AAwBN,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}